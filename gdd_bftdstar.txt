Battle for the dark star:

Dark souls + Star fox -> with a Battlestar Galactica theme [Humans vs Robots (simple is better, no need to  get clever obscuring Cylons. Wear inspiration as a badge)]
--Use clever movement and positioning to defeat enemies
    e.g.: 
        -get behind and shoot them down while they cannot shoot you
        -Fly through difficult terrain to cause the enemy to impact the enviroment and hurt themselves while you escape
        -maneuver so enemies attempting to shoot you from different directions miss and shoot each other
        -trade shots with an enemy while trying to [bullet hell style] avoid their incoming shots

--Collect money to improve your current loadout:
    e.g.:
        -repair fighters
        -upgrade fighters
        -repair fleetships
        -upgrade fleetships
        -use fleetship abilities
        -maintain fleetship abilities
        -buy consumables like missiles or flares
    Done by: Killing enemies, finding treasure, finishing events

--Explore to find NPCs to bring back to the fleet or find upgrades
    e.g.:
        -Find Npcs to bring back to the fleet.
        -Find new upgrades to the fleet
        -Find targets[Events/bosses] for special bonuses or overall progress.
        -Use the right ship type/loadout for each area/zone/mission [e.g.: landmaster tank for planetary stuff. Viper for space, Raptor for hauling items/npcs etc]

        




Player:

Enemies: 
    F.E.A.R enemy tactics
    Lean into the robotic AI of the enemy
    -> Enemies do not react to the player: assess the current world state to make a decision
        e.g.: Do -NOT- respond to the player firing their weapons
                -DO- consider how much dmg the player has taken
             Do -NOT- consider if the player is accelerating
                -DO- consider player's current velocity
    Ai:
        --brain power:
            Enemies make decisions at intervals based on their 'brain power'
                --e.g.: every Xseconds assess the state of the world and make a decision.
        --brain as a ship part -> what it can and cannot get information about based on its capabilities
            --e.g.: can detect velocity but not facing, or whether the weapons are hot

Enemy Fleet: Acts similar to the player's talent tree to confer benefits to the enemies, either globally or locally[current map/zone] depending on the specifics of each Enemyfleetship type

        
NPCs:


Fleet: 
    Acts like a talent tree to confer benefits, generate or hold resources for the player. Lost if the ship is destroyed.
    Talent tree:
        -Generate or hold resources.
        -Provides stat improvements.
        -Provides special abilities. [e.g. call orbital strike]


Progression:



Movement:
    3rd person:
        camera: Controled by the right analog stick or the mouse to look in the direction the player directs it.
                -or looks at the target if locking on.
                Roll is orientation is controlled by the camera.
        ship: (vehicle - land master? blue marine?)
        >> the Ship is two objects. The entire system which the primary velocity, damage, collision are on, and the secondary system [collider for the ship] which can move lateral in place without the enite ship moving
            --allows the player to react quickly and dodge attacks in a small area but cannot make major movements in lateral directions 
            Engines:
                -Rotates to face the camera direction at a speed determined by the engines.
                    --can be a toggle to have the ship only rotate when moving
                -Propel the ship forward based on its current facing NOT the facing of the camera
                    --can be a toggle to have it be camera relative.
                -Lateral movement relative to the camera within a designated boundary
                    -- when at the boundary max the entire ship system adds that lateral movement to the target velocity
                  
    External forces: Collisions, getting shot, losing stamina, or firing weapons like a rail gun apply external forces that the engine tracks and includes in its calculations.
        --Handled by the engine and modified by the enviroment [high friction, gracity etc]

Enviroment Levels:
    Enviroment type determine gravity, friction, and ambient forces [e.g.: Sand decreases engine effectiveness increases durability loss]




--comparison to dark souls:

Souls:
Player Respawns:
Enemy Respawns:
Upgrades:




Thoughts and design whiteboard:
    Everspace 2, like star wars squadrons have the same terrible camera/gun controls: you can mouse move around in the small center area
        and need to move it to the outside to turn, and it turns with you so you ALWAYS over shoot and can never readjust to precision


    Pursuit: If always being pursued it needs to be core to everything being a time pressure and not just skill decision in battle. Pursuit as an addition would probably feel comubersum to the player.
            -- could it be a special sometimes event e.g.: being pursued until X happens/is killed, or for X jumps?
        --Or part of a Back4Blood corruption cards mechanic since the enemy fleets work as a talent tree already.
                >> Pursued until the ship giving the pursuit benefit is destroyed OR the player finds a way to hide the fleet and escape? >> I like that

    stamina/fuel: ?? fuel is a consumable that you spend to fll your stamina bar when adventuring?? risk/spend less fuel but have less stamina or vice versa


    ?? nemisis system from mordor? --- thinking about Scar

    // "set condition one throughout the fleet" "set the fleet to condition two" 
--- have the talent tree [the fleet] have different effects based on the danger condition [less production more support?]

// where is the baseship?
-- are enemy respawns tied to the ship that launches them? could enemies with no ship clue the player to hidden information/secret areas?


--loop to loops, snap turning and other movement 'manevuers' [think RE4 forward+back to 180 or startfox's loop-to-loop]
   ---should these be commands? or should all the movement be player's inputs with no shortcuts
   ---?break the camera controls to be two spheres so the player can look around without altering the camera's direction based rotation {e.g. to be able to look over their shoulder}


lateral movement: click in left stick to move lateral outside of the local position

--pilots vs ships
  --pilots refresh on timer
    ----pilots refresh with enemies?
  --ships are a resource
  > spend pilots to fight through a map via attrition
  e.g. extra lives


?Heat venting?


ai-> enemies have ram to determine how complex the flight manevuers they can do



Ship act order:
 //Engine -> chasis -> weapons -> other
 // figure out the intended force of the engine
 // apply the resistance from the chasis and the external forces
 //move the ship based on the return value from the chasis
 //perform the gun's action if any
 //apply any external forces from the gun if needed: e.g. recoil from a rail gun or system overheat


Engine's forward target:
//the engines push the ship 'forward' and combined with the lateral control this transform should be used
// to apply the force of the engine to the correct forwar: If moving laterally while flying the 'forward' should
// be slightly off center from camera logically
// public Transform mainTransform;

Chasis:
//The [ship this chasis is attached to] passes its intended velocity [_force]
//This chasis applies any external forces: e.g. recoil from a weapon firing, collisions

//using 'Lerp' with no delta time component allows us to apply how much the chasis resists these forces
// a value of '1' means there is no resistance











glossary:

Enemy: The ships trying to kill the player and destroy the fleet. Bosses are considered enemies.
Enemyfleetship: Functions similar to the player's fleet ships.
Events: An objective location, enemy, or item that confers a special bonus. Timed version of Targets. 
Fighter: the ship that the player and enemies fly around in.
Fleetship: Npcs, confer stats, affects, or hold resources.
Fleet: Collection of npc ships that work like a talent tree.
Targets: An objective location, enemy, or item that confers a special bonus.Not Timed version of Events.
